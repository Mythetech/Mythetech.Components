@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))
@inherits LayoutComponentBase

<MudThemeProvider Theme="@(_theme)" IsDarkMode="@_isDarkMode"/>

<MudStack Row Class="d-flex mud-width-full">
    <MudSpacer/>
    <MudIconButton Icon="@(!_isDarkMode ? Icons.Material.TwoTone.WbSunny : Icons.Material.TwoTone.ModeNight)" OnClick="(() => { _isDarkMode = !_isDarkMode; StateHasChanged(); })"/>
</MudStack>

@Body

@code {
    private bool _isDarkMode = true;
    
    private MudTheme _theme = new()
    {
        PaletteLight = new PaletteLight()
        {
            Primary = SirenColors.Primary,
            Secondary = SirenColors.Darken,
            Tertiary = SirenColors.Tertiary,
            HoverOpacity = 0.5,
            Background = SirenColors.Light,
            AppbarBackground = SirenColors.Primary,
            Black = SirenColors.Black,
            Surface = "FFFFFF",
            ActionDefault = SirenColors.Primary,
            ActionDisabled = SirenColors.ActionDisabled,
            TableHover = SirenColors.Tertiary,

        },
        PaletteDark = new PaletteDark()
        {
            Primary = SirenColors.Primary,
            Secondary = SirenColors.Light,
            Tertiary = SirenColors.Dark.AppBarBackground,
            HoverOpacity = 0.5,
            TableHover = SirenColors.Dark.AppBarBackground,
            AppbarBackground = SirenColors.Dark.AppBarBackground,
            Background = SirenColors.Black,
            Black = SirenColors.Black,
            Surface = SirenColors.Black,
            ActionDefault = SirenColors.Primary,
            GrayDarker = "#222"
        },
        Typography = new Typography()
        {
            Default = new DefaultTypography()
            {
                FontFamily = new[] { "Tahoma", "Geneva", "Verdana", },
                TextTransform = "none",
                FontSize = "0.75",
            },

            Button = new ButtonTypography()
            {
                FontFamily = new[] { "Tahoma", "Geneva", "Verdana", },
                TextTransform = "none",
                FontSize = "1em",
            }
        },
        LayoutProperties = new LayoutProperties()
        {
            DefaultBorderRadius = "0.5em",
            AppbarHeight = "3rem",
            DrawerWidthLeft = "25vw",
            DrawerMiniWidthLeft = "3.25em",
        }
    };
    public static class SirenColors
    {
        public static class Dark
        {
            //public static string Primary => "03045e";
            public static string Primary => "00001A";

            public static string Secondary => "640ADB";

            public static string Tertiary => "002538";

            public static string AppBarBackground => "00162E";
        }

        public static string Primary => "0077B6";

        public static string Secondary => "170035";

        public static string Tertiary => "AED2E5";

        public static string Light => "caf0f8";

        public static string Darken => "00001A";

        public static string Black => "000000";

        public static string Action => "";

        public static string ActionDisabled => "AED2E5";

        public static string Hash(string s)
        {
            return $"#{s}";
        }
    }
}
